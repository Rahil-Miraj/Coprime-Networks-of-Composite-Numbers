import numpy as np
import networkx as nx

def av_degree(n):
    P = nx.Graph()
    A = np.zeros((n,n))
    for i in range (4,n+1):
        for t in range (2,int(np.sqrt(i))+1):
            if i%t==0:
                P.add_nodes_from([i])
                for j in range (1,i):
                    for s in range (2,int(np.sqrt(j))+1):
                        if j%s==0:
                            if np.gcd(i,j)==1:
                                P.add_edges_from ([(j,i)])
                                A[i-1,j-1]=1
                                A[j-1,i-1]=1
                                break
                break
    x=0
    for i in range (4,n+1):
        for t in range (2,int(np.sqrt(i))+2):
            if i%t==0:
                break
            elif t==int(np.sqrt(i))+1:
                x+=1
                A = np.delete(A,i-x,0)
                A = np.delete(A,i-x,1)
    for r in range (0,3):
        A = np.delete(A,0,0)
        A = np.delete(A,0,1)
    degree= np.sum(A,axis=1)
    return np.mean(degree)

av_deg=[]
for i in range(1,101):
    print(i)
    av_deg.append(av_degree(i*100))
    
np.savetxt('av_degree.txt',av_deg)