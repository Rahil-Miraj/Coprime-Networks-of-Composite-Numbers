#second_max_eigenvalues of Laplacian matrix upto n=10k

import numpy as np
import networkx as nx
# import matplotlib.pyplot as plt
def coprime_composite(n):
    P = nx.Graph()
    for i in range (4,n+1):
        for t in range (2,int(np.sqrt(i))+1):
            if i%t==0:
                P.add_nodes_from([i])
                for j in range (1,i):
                    for s in range (2,int(np.sqrt(j))+1):
                        if j%s==0:
                            if np.gcd(i,j)==1:
                                P.add_edges_from ([(j,i)])
                                break
                break
    return P

def second_max_eigvalue_lap(n):
    P=coprime_composite(n)
    x=nx.laplacian_spectrum(P)
    return x[1]

second_max_eigval_lap=[]
for i in range(1,100+1):
    print(i*100)
    second_max_eigval_lap.append(second_max_eigvalue_lap(i*100))
    
np.savetxt('Rahil_second_max_eigenvalue_lap_n=10k_output.txt',second_max_eigval_lap)