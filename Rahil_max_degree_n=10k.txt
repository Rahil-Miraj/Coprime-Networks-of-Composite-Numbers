#max_degree for n=10k

import numpy as np
import networkx as nx
def coprime_composite(n):
    P = nx.Graph()
    for i in range (4,n+1):
        for t in range (2,int(np.sqrt(i))+1):
            if i%t==0:
                P.add_nodes_from([i])
                for j in range (1,i):
                    for s in range (2,int(np.sqrt(j))+1):
                        if j%s==0:
                            if np.gcd(i,j)==1:
                                P.add_edges_from ([(j,i)])
                                break
                break
    return P

def max_degree(n):
    x=[]
    P=coprime_composite(n)
    a=nx.nodes(P)
    for i in a:
        x.append(P.degree(i))
    return max(x)

max_deg=[]
for i in range(1,100+1):
    print(i)
    max_deg.append(max_degree(i*100))
    
np.savetxt('Rahil_max_degree_n=10k_output.txt',max_deg)